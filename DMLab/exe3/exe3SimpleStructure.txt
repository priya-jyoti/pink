============
DB Structure
============


exethree> db.musician.find()
[
  {
    _id: ObjectId("650efdbfef3822791e28b2ef"),
    ssn: 'M001',
    name: 'Alice',
    address: 'Bangalore',
    phone: 8745214523,
    iuin: [ 1, 5, 8 ]
  },
  {
    _id: ObjectId("650efdbfef3822791e28b2f0"),
    ssn: 'M002',
    name: 'Bob',
    address: 'Chennai',
    phone: 9874532145,
    iuin: [ 3, 8 ]
  },
  {
    _id: ObjectId("650efdbfef3822791e28b2f1"),
    ssn: 'M003',
    name: 'Tommy',
    address: 'Mysore',
    phone: 8745632145,
    iuin: [ 1 ]
  },
  {
    _id: ObjectId("650efdbfef3822791e28b2f2"),
    ssn: 'M004',
    name: 'Krish',
    address: 'Trichy',
    phone: 9874521456,
    iuin: [ 5, 3, 8, 1 ]
  }
]

exethree> db.instrument.find()
[
  {
    _id: ObjectId("650efdd3ef3822791e28b2fa"),
    iuin: 1,
    name: 'guitar',
    key: 'CDGA'
  },
  {
    _id: ObjectId("650efdd3ef3822791e28b2fb"),
    iuin: 3,
    name: 'piano',
    key: 'CDGF'
  },
  {
    _id: ObjectId("650efdd3ef3822791e28b2fc"),
    iuin: 5,
    name: 'drums',
    key: 'CDG'
  },
  {
    _id: ObjectId("650efdd3ef3822791e28b2fd"),
    iuin: 8,
    name: 'flute',
    key: 'CDG'
  }
]
exethree> db.album.find()
[
  {
    _id: ObjectId("650efdc7ef3822791e28b2f3"),
    auin: 'A001',
    title: 'Album 1',
    date: '2001-5-23',
    format: 'CD',
    sid: [ 'S001', 'S002', 'S006' ],
    producer: 'M004'
  },
  {
    _id: ObjectId("650efdc7ef3822791e28b2f4"),
    auin: 'A002',
    title: 'Album 2',
    date: '2010-9-13',
    format: 'MC',
    sid: [ 'S003', 'S004', 'S005' ],
    producer: 'M001'
  }
]
exethree> db.song.find()
[
  {
    _id: ObjectId("650efdcdef3822791e28b2f5"),
    sid: 'S001',
    stitle: 'Title 1',
    author: 'author 1',
    musid: [ 'M004', 'M003', 'M002' ],
    albid: 'A001'
  },
  {
    _id: ObjectId("650efdcdef3822791e28b2f6"),
    sid: 'S002',
    stitle: 'Title 2',
    author: 'author 2',
    musid: [ 'M004', 'M003', 'M002' ],
    albid: 'A001'
  },
  {
    _id: ObjectId("650efdcdef3822791e28b2f7"),
    sid: 'S003',
    stitle: 'Title 3',
    author: 'author 3',
    musid: [ 'M004' ],
    albid: 'A002'
  },
  {
    _id: ObjectId("650efdcdef3822791e28b2f8"),
    sid: 'S004',
    stitle: 'Title 4',
    author: 'author 4',
    musid: [ 'M001' ],
    albid: 'A002'
  },
  {
    _id: ObjectId("650efdcdef3822791e28b2f9"),
    sid: 'S005',
    stitle: 'Title 5',
    author: 'author 5',
    musid: [ 'M001' ],
    albid: 'A002'
  }
]



=======
Queries
=======

1. List musician name, title of the song which he has played, the album in which song has occurred.
db.song.aggregate([{$unwind:'$musid'},{$group:{_id:'$musid',song:{$push:'$stitle'},album:{$push:'$albid'}}}])

2. Retrieve the name of Musician who have not produced any Album
db.musician.aggregate({$match:{ssn:{$nin:db.album.distinct('producer')}}},{$project:{name:1,_id:0}})


3. List the details of songs which are performed by more than 2 musicians.
db.song.aggregate([ { $project: { _id: 0, sid: 1, stitle: 1, author: 1,  musidSize: { $size: "$musid" } } },{$match:{musidSize:{$gte:2}}}] );


4. List the different instruments played by the musicians and the average number of musicians who play the instrument.
db.musician.aggregate([{$unwind:'$iuin'},{$group:{_id:'$iuin',count:{$sum:1}}},{$lookup:{from:'instrument',localField:'_id',foreignField:'iuin',as:'i'}},{$project:{i:'$i.name',count:1,avg:{$divide:['$count',db.instrument.find().count()]}}}])


5.Retrieve album title produced by the producer who plays guitar as well as flute and has produced no of songs greater than or equal to the average songs produced by all producers.

notown> const producersList = db.album.distinct("producer");

notown> const instrument_to_have = db.instrument.distinct("iuin", { name: { $in: ["flute", "guitar"] } });

notown> const producerList = db.musician.distinct("ssn", { ssn: { $in: producersList }, iuin: { $all: instrument_to_have } });

notown> const minSidCount = db.album.aggregate([ { $group: { _id: "$producer", totalSongs: { $sum: { $size: "$sid" } } } }, { $group: { _id: null, avgSongsProduced: { $avg: "$totalSongs" } } }, { $project: { _id: 0, avgSongsProduced: 1 } }] ).next().avgSongsProduced;

notown> db.musician.aggregate([ { $match: { ssn: { $in: producersList }, $expr: { $gte: [{ $size: "$sid" }, minSidCount] } } }, { $project: { _id: 0, name: 1, sidCount: { $size: "$sid" } } }] )


6. List the details of musicians who can play all the instruments present
db.musician.find({iuin:{$all:db.instrument.distinct('iuin')}})




=================
Query to remember
=================
exethree> db.song.updateOne({sid:'S001'},{$set:{musid:['M004','M003','M002']}})
exethree> db.musician.updateMany({},{$unset:{sid:''}})


